repos:
- repo: https://github.com/awslabs/git-secrets
  rev: b9e96b3212fa06aea65964ff0d5cda84ce935f38 # Must be post the 1.3.0 release
  hooks:
  - id: git-secrets
    entry: git-secrets --scan
    files: .
    args: [--untracked]

- repo: https://github.com/pre-commit/pre-commit-hooks
  rev: v4.3.0
  hooks:
    # Git style
    - id: check-added-large-files
    - id: check-merge-conflict
    - id: check-vcs-permalinks
    - id: forbid-new-submodules
    - id: no-commit-to-branch

    # Common errors
    - id: end-of-file-fixer
      exclude: (\.asc)$
    - id: trailing-whitespace
      args: [--markdown-linebreak-ext=md]
      exclude: CHANGELOG.md
    - id: check-yaml
      args: [--allow-multiple-documents]
    - id: check-merge-conflict
    - id: check-executables-have-shebangs

    # Cross platform
    - id: check-case-conflict
    - id: mixed-line-ending
      args: [--fix=lf]

    # Security
    - id: detect-aws-credentials
      args: ['--allow-missing-credentials']
    - id: detect-private-key

# Check shell scripts example
- repo: https://github.com/jumanjihouse/pre-commit-hooks
  rev: 3.0.0
  hooks:
    - id: shfmt
      args: ['-l', '-i', '2', '-ci', '-sr', '-w']
    - id: shellcheck
      exclude: (import\.sh)$

- repo: https://github.com/antonbabenko/pre-commit-terraform
  rev: v1.75.0
  hooks:
    #- id: tfupdate
    #  args:
    #    - --args=terraform
    #  files: \.tf$

    - id: terraform_fmt
      files: (\.tf|\.tfvars)$
      exclude: \.terraform\/.*$

    - id: terraform_providers_lock
      files: (\.terraform\.lock\.hcl)$
      exclude: \.terraform\/.*$
      args:
         - --args=-platform=linux_amd64
         - --args=-platform=darwin_amd64
         - --args=-platform=darwin_arm64

    - id: terraform_tflint
      args:
      - --args=--config=__GIT_WORKING_DIR__/.tflint.hcl
      files: (\.tf|\.tfvars)$
      exclude: (\.terraform.*)$

    - id: terraform_docs
      args:
        - --args=--config=.terraform-docs.yml

- repo: https://github.com/tekwizely/pre-commit-golang
  rev: "v1.0.0-rc.1"
  hooks:
  #
  # Go Build
  #
  -   id: go-build-repo-mod
  #
  # Go Mod Tidy
  #
  -   id: go-mod-tidy-repo
  #
  # Go Test
  #
  -   id: go-test-repo-mod
  #
  # Go Vet
  #
  #-   id: go-vet
  -   id: go-vet-repo-mod
  #
  # Revive
  #
  -   id: go-revive-repo-mod
  #
  # GoSec
  #
  -   id: go-sec-repo-mod
  #
  # StaticCheck
  #
  -   id: go-staticcheck-repo-mod
  #
  # StructSlop
  #
  #-   id: go-structslop-repo-mod
  #
  # Formatters
  #
  #-   id: go-fmt
  #-   id: go-fmt-repo
  #-   id: go-fumpt        # replaces go-fmt
  #-   id: go-fumpt-repo   # replaces go-fmt-repo
  #-   id: go-imports      # replaces go-fmt
  #-   id: go-imports-repo # replaces go-fmt-repo
  -   id: go-returns      # replaces go-imports & go-fmt
      exclude: '(tools)/'
  #-   id: go-returns-repo # replaces go-imports-repo & go-fmt-repo
  #
  # Style Checkers
  #
  #-   id: go-lint
  -   id: go-critic
  #
  # GolangCI-Lint
  # - Fast Multi-Linter
  # - Can be configured to replace MOST other hooks
  # - Supports repo config file for configuration
  # - https://github.com/golangci/golangci-lint
  #
  #-   id: golangci-lint
  #-   id: golangci-lint-mod
  -   id: golangci-lint-repo-mod
  #
  # Invoking Custom Go Tools
  # - Configured *entirely* through the `args` attribute, ie:
  #   args: [ go, test, ./... ]
  # - Use arg `--hook:error-on-output` to indicate that any output from the tool
  #   should be treated as an error.
  # - Use the `name` attribute to provide better messaging when the hook runs
  # - Use the `alias` attribute to be able to invoke your hook via `pre-commit run`
  #
  #-   id: my-cmd
